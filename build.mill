package build

import $ivy.`com.lihaoyi::mill-contrib-sonatypecentral:`
import $ivy.`de.tototec::de.tobiasroeser.mill.vcs.version::0.4.1`
import $ivy.`ba.sake::mill-hepek::0.1.0`
import mill._
import mill.scalalib._
import mill.scalalib.scalafmt._
import mill.scalalib.publish._
import mill.scalalib.api.ZincWorkerUtil.scalaNativeBinaryVersion
import mill.contrib.sonatypecentral.SonatypeCentralPublishModule
import de.tobiasroeser.mill.vcs.version.VcsVersion
import ba.sake.millhepek.MillHepekModule

val scala213 = "2.13.14"
val scala3 = "3.4.2"
val millVersion = "0.12.0"

object squery extends ScalaModule with SqueryPublishModule with ScalafmtModule {
  def artifactName = "squery"
  def scalaVersion = scala3
  def ivyDeps = Agg(
    ivy"com.typesafe.scala-logging::scala-logging:3.9.4",
    ivy"com.github.jsqlparser:jsqlparser:4.7",
    ivy"org.scala-lang.modules::scala-collection-contrib:0.4.0"
  )
  def scalacOptions = Seq("-Ywarn-unused", "-deprecation", "-feature", "-language:implicitConversions")

  object `postgres-jawn` extends ScalaModule with SqueryPublishModule with ScalafmtModule {
    def artifactName = "squery-postgres-jawn"
    def scalaVersion = scala3
    def moduleDeps = Seq(squery)
    def ivyDeps = Agg(
      ivy"org.typelevel::jawn-ast::1.6.0"
    )
  }

  object test extends ScalaTests with TestModule.Munit {
    def ivyDeps = Agg(
      ivy"org.scalameta::munit:1.0.0",
      ivy"ch.qos.logback:logback-classic:1.5.7",
      ivy"com.zaxxer:HikariCP:4.0.3",
      ivy"com.h2database:h2:2.3.232",
      ivy"org.testcontainers:testcontainers:1.17.6",
      ivy"org.testcontainers:postgresql:1.17.6",
      ivy"org.postgresql:postgresql:42.7.4",
      ivy"org.testcontainers:mysql:1.19.3",
      ivy"mysql:mysql-connector-java:8.0.33",
      ivy"org.testcontainers:mariadb:1.19.3",
      ivy"org.mariadb.jdbc:mariadb-java-client:3.3.2",
      ivy"org.testcontainers:oracle-free:1.19.3",
      ivy"com.oracle.database.jdbc:ojdbc8:23.3.0.23.09"
    )
  }
}

object generator extends ScalaModule with SqueryPublishModule with ScalafmtModule {
  def artifactName = "squery-generator"
  def scalaVersion = scala213
  def ivyDeps = Agg(
    ivy"ba.sake::regenesca:0.5.0",
    ivy"com.typesafe.scala-logging::scala-logging:3.9.4",
    ivy"ch.qos.logback:logback-classic:1.5.7",
    ivy"org.apache.commons:commons-text:1.12.0"
  )
}

/* MILL PLUGIN */
object `mill-plugin` extends ScalaModule with SqueryPublishModule with ScalafmtModule {
  def artifactName = "mill-squery-generator_mill"
  def platformSuffix = "_mill" + mill.main.BuildInfo.millBinPlatform

  def scalaVersion = scala213
  def scalacOptions = Seq("-Ywarn-unused", "-deprecation")
  def moduleDeps = Seq(generator)
  def ivyDeps = Agg(
    ivy"com.lihaoyi:mill-dist:${millVersion}",
    ivy"com.h2database:h2:2.3.232",
    ivy"org.postgresql:postgresql:42.7.4",
    ivy"mysql:mysql-connector-java:8.0.33",
    ivy"org.mariadb.jdbc:mariadb-java-client:3.3.2",
    ivy"com.oracle.database.jdbc:ojdbc8:23.3.0.23.09"
  )
  
  object test extends ScalaTests with TestModule.Munit {
    def ivyDeps = Agg(
      ivy"com.lihaoyi::mill-testkit:${millVersion}",
      ivy"org.scalameta::munit:1.0.2"
    )
    def forkEnv = Task {
      val millAssemblyPath = millExecutable.assembly().path
      val millExecPath =
        if (scala.util.Properties.isWin) {
          val batPath = millAssemblyPath / os.up / (millAssemblyPath.baseName + ".bat")
          os.copy.over(millAssemblyPath, batPath)
          batPath.toString
        } else millAssemblyPath.toString
      Map("MILL_EXECUTABLE_PATH" -> millExecPath)
    }

    object millExecutable extends JavaModule {
      def ivyDeps = Agg(ivy"com.lihaoyi:mill-dist:${millVersion}")
      def mainClass = Some("mill.runner.client.MillClientMain")
      def resources = Task {
        val p = Task.dest / "mill/local-test-overrides" / s"ba.sake-${`mill-plugin`.artifactId()}"
        os.write(p, `mill-plugin`.localClasspath().map(_.path).mkString("\n"), createFolders = true)
        Seq(PathRef(Task.dest))
      }
    }
  }
}

/* DOCS */
object docs extends ScalaModule with MillHepekModule with ScalafmtModule {
  def scalaVersion = scala3
  def ivyDeps = Agg(
    ivy"ba.sake::hepek:0.24.1"
  )
}

trait SqueryPublishModule extends SonatypeCentralPublishModule {
  def publishVersion = VcsVersion.vcsState().format()
  def pomSettings = PomSettings(
    organization = "ba.sake",
    url = "https://github.com/sake92/squery",
    licenses = Seq(License.Common.Apache2),
    versionControl = VersionControl.github("sake92", "squery"),
    description = "Squery SQL library",
    developers = Seq(
        Developer("sake92", "Sakib Hadžiavdić", "https://sake.ba")
    )
  )
}